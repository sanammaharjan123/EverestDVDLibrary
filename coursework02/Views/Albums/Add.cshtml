@model coursework02.ViewModels.CreateAlbumVM

@{
    ViewBag.Title = "Add";
}
@using (Html.BeginForm("Add", "Albums", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Albums</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CopyNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CopyNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CopyNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FinePerDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinePerDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinePerDay, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                18+
            </label>            <div class="col-md-10">
                @Html.EditorFor(model => model.IsAgeBar)
                @Html.ValidationMessageFor(model => model.IsAgeBar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", id = "txtReleaseDate" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudioName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudioName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudioName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Cover Image</label>
            <div class="col-md-10">
                <input type="file" name="CoverImage" class="form-control" />

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Producer</label>

            <div class="col-md-10">

                @*@Html.ListBoxFor(x => x.ProducerIds, Model.Producers, new { @class = "form-control" })*@
                @Html.DropDownListFor(x => x.ProducerIds, new SelectList(Model.Producers, "Value", "Text"), new { multiple = "multiple", @class = "form-control", id = "ddlProducer" })

                @Html.ValidationMessageFor(model => model.Producers, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Add Producer</label>
            <div class="col-md-10">
                <table class="table table-bordered" id="tblProducer">
                    <tr>
                        <th>Name</th>
                        <th>Studio</th>
                        <th>DOB</th>
                        <th></th>
                    </tr>
                    @for (int i = 0; i < Model.ProducerList.Count(); i++)
                    {
                        <tr id="dataRow">
                            <td>@Html.TextBoxFor(m => m.ProducerList[i].Name, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.ProducerList[i].Studio, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.ProducerList[i].DateOfBirth, new { @class = "form-control", id = "txtDOB" })</td>
                            <td>
                                @if (i > 0)
                                {
                                    <a href="#" id="remove">
                                        <i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }

                </table>
                <div class="col-md-12 text-right">
                    <a href="#" id="addNew" class="btn btn-default">Add New Row</a>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Cast Member</label>

            <div class="col-md-10">
                @*  @Html.ListBoxFor(x => x.ArtistIds, Model.Artists, new { @class = "form-control" })*@
                @Html.DropDownListFor(x => x.ArtistIds, new SelectList(Model.Artists, "Value", "Text"), new { multiple = "multiple", @class = "form-control", id = "ddlArtist" })
                @Html.ValidationMessageFor(model => model.ArtistIds, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Add Cast Members</label>
            <div class="col-md-10">
                <table class="table table-bordered" id="tblArtist">
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Gender</th>
                        <th>PhoneNumber</th>
                        <th>DOB</th>
                        <th></th>
                    </tr>
                    @for (int i = 0; i < Model.ArtistList.Count(); i++)
                    {
                        <tr id="dataRow">
                            <td>@Html.TextBoxFor(m => m.ArtistList[i].Name, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.ArtistList[i].Email, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.ArtistList[i].Gender, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.ArtistList[i].PhoneNumber, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.ArtistList[i].BirthDate, new { @class = "form-control", id = "txtDOB" })</td>
                            <td>
                                @if (i > 0)
                                {
                                    <a href="#" id="remove">
                                        <i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }

                </table>
                <div class="col-md-12 text-right">
                    <a href="#" id="addNew" class="btn btn-default">Add New Row</a>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>

    <script language="javascript">
        $(document).ready(function () {

           // $("body #txtDOB").datepicker();
            $('body').on('focus', "#txtDOB", function () {
                $(this).datepicker();
            });

            $("#txtReleaseDate").datepicker();

            $('#ddlArtist').select2({
                placeholder: 'Select Artist'
            });

            $('#ddlProducer').select2({
                placeholder: 'Select Producer'
            });

            // 2. Remove
            $('body').on("click", 'a#remove', function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

            //Add new col
            $('body').on("click", 'a#addNew', function (e) {
                e.preventDefault();
                var $tableBody = $(this).parent().parent().find('table');// $("#tblProducer");
                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" id ="remove"><i class="fa fa-minus-circle text-danger" style="font-size:15px;"></i></a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);

                    var oldId = $(this).attr('id');
                    var newId = oldId.replace(suffix, (parseInt(suffix) + 1));
                    $(this).attr('id', newId);

                    //Replaced value
                    var type = $(this).attr('type');
                    if (type == "text") {
                        $(this).val('');
                    }
                    // If you have another Type then replace withF default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);

                // Re-assign Validation
                var form = $("form")
                    .removeData("validator")
                    .removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            });


            $("#btnSubmit").submit(function (e) {
                serializeTableRow();
            });
        });

        function serializeTableRow() {
            var i = 0;
            $("body #tblProducer tr#dataRow").each(function (e) {

                $(this).find('input,select').each(function () {

                    // var suffix = $(this).find(':input:first').attr('name').match(/\d+/);
                    var oldN = $(this).attr('name');
                    var oldNIndex = oldN.match(/\d+/);
                    var newN = oldN.replace('[' + oldNIndex + ']', '[' + parseInt(i) + ']');
                    $(this).attr('name', newN);
                });
                i = (parseInt(i) + 1);
            });

            var j = 0;
            $("body #tblArtist tr#dataRow").each(function (e) {
                $(this).find('input,select').each(function () {

                    // var suffix = $(this).find(':input:first').attr('name').match(/\d+/);
                    var oldN = $(this).attr('name');
                    var oldNIndex = oldN.match(/\d+/);
                    var newN = oldN.replace('[' + oldNIndex + ']', '[' + parseInt(j) + ']');
                    $(this).attr('name', newN);
                });
                j = (parseInt(j) + 1);
            });
        }

    </script>
}
